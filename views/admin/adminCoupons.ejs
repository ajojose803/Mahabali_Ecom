<%- include('../partials/adminHeader') -%>
<ul class="list-unstyled">
  <!-- Sidebar links -->
  <li><a href="/admin/dashboard"> <i class="icon-home"></i>Dashboard</a></li>
  <li><a href="/admin/users"> <i class="fa fa-bar-chart"></i>Users</a></li>
  <li><a href="/admin/category"> <i class="fa fa-building-o"></i>Category</a></li>
  <li><a href="/admin/products"> <i class="icon-grid"></i>Products</a></li>
  <li class="active"><a href="/admin/coupons"> <i class="fa fa-percent"></i>Coupons</a></li>
  <li><a href="/admin/orders"> <i class="icon-padnote"></i>Orders</a></li>
  <!-- <li><a href="/admin/banners"><i class="fa fa-map"></i>Banners</a></li> -->
</ul>
</nav>
<!-- Sidebar Navigation end-->
<div class="page-content">
  <div class="page-header">
    <div class="container-fluid">
      <h2 class="h5 no-margin-bottom">Coupons</h2>
    </div>
  </div>
  <div class="title" style="margin-left: 80%;">
    <button class="btn btn-danger"><a href="/admin/add-coupon" style="text-decoration: none;color: white;">Add New Coupon</a></button>
  </div>
  <!-- Flash Messages -->
  <% if (couponExists) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <button class="btn-close mt-2" style="float: inline-end;" type="button" data-bs-dismiss="alert"
      aria-label="Close"></button>
      <%= couponExists %>
    </div>
  <% } %>
  <% if (couponAdded) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
      <button class="btn-close mt-2" style="float: inline-end;" type="button" data-bs-dismiss="alert"
      aria-label="Close"></button>
      <%= couponAdded %>
    </div>
  <% } %>
  <div class="table-responsive" style="padding: 5%;">
    <table class="table">
      <thead>
        <tr>
          <th>Coupon Code</th>
          <th>Discount Type</th>
          <th>Discount</th>
          <th>Min Purchase</th>
          <th>Valid From</th>
          <th>Valid To</th>
          <th>Limited</th>
          <th>Status</th>
          <th>Action</th>
          <th>Edit</th>
        </tr>
      </thead>
      <tbody>
        <% coupons.forEach(function(coupon, index) { %>
          <tr>
            <td><%= coupon.code %></td>
            <td>
              <% if (coupon.discountType === 'flatDiscount') { %>
                Flat
              <% } else if (coupon.discountType === 'percentageDiscount') { %>
                Percentage
              <% } %>
            </td>
            <td><%= coupon.discountAmount %></td>
            <td><%= coupon.minPurchaseAmount %></td>
            <td><%= new Date(coupon.validFrom).toLocaleDateString() %></td>
            <td><%= new Date(coupon.validTo).toLocaleDateString() %></td>
            <td><%= coupon.oncePerUser ? 'Yes' : 'No' %></td>
            <td><%= coupon.status ? 'Listed' : 'Unlisted' %></td>
            <td>
              <a class="btn btn-primary" style="color: white; background-color: #30ca09;" onclick="confirmUnlistt('<%= coupon._id %>')">
                <%= coupon.status ? 'Unlist' : 'List' %>
              </a>
            </td>
            <td>
              <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editCouponModal<%= index %>">
                Edit
              </button>
              <!-- Modal -->
              <div class="modal fade" id="editCouponModal<%= index %>" tabindex="-1" role="dialog" aria-labelledby="editCouponLabel<%= index %>" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editCouponLabel<%= index %>">Edit Coupon</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form action="/admin/edit-coupon/<%= coupon._id %>" method="post">
                                <div class="mb-3">
                                    <label for="code<%= index %>" class="form-label">Coupon Code</label>
                                    <input type="text" class="form-control" id="code<%= index %>" name="code" value="<%= coupon.code %>" required>
                                </div>
                                <div class="mb-3">
                                    <label for="discountType<%= index %>" class="form-label">Discount Type</label>
                                    <select class="form-control" id="discountType<%= index %>" name="discountType" required>
                                        <option value="flatDiscount" <%= coupon.discountType === 'fixed' ? 'selected' : '' %>>Flat Discount</option>
                                        <option value="percentageDiscount" <%= coupon.discountType === 'percentage' ? 'selected' : '' %>>Percentage Discount</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="discountAmount<%= index %>" class="form-label">Discount Amount</label>
                                    <input type="number" class="form-control" id="discountAmount<%= index %>" name="discountAmount" value="<%= coupon.discountAmount %>" required>
                                </div>
                                <div class="mb-3">
                                    <label for="minPurchaseAmount<%= index %>" class="form-label">Min Purchase Amount</label>
                                    <input type="number" class="form-control" id="minPurchaseAmount<%= index %>" name="minPurchaseAmount" value="<%= coupon.minPurchaseAmount %>">
                                </div>
                                <div class="mb-3">
                                    <label for="maxRedeem<%= index %>" class="form-label">Max Redeem</label>
                                    <input type="number" class="form-control" id="maxRedeem<%= index %>" name="maxRedeem" value="<%= coupon.maxRedeem %>" required>
                                </div>
                                <div class="mb-3">
                                    <label for="validFrom<%= index %>" class="form-label">Valid From</label>
                                    <input type="date" class="form-control" id="validFrom<%= index %>" name="validFrom" value="<%= coupon.validFrom.toISOString().substring(0, 10) %>" required>
                                </div>
                                <div class="mb-3">
                                    <label for="validTo<%= index %>" class="form-label">Valid To</label>
                                    <input type="date" class="form-control" id="validTo<%= index %>" name="validTo" value="<%= coupon.validTo.toISOString().substring(0, 10) %>" required>
                                </div>
                                <div class="mb-3 form-check">
                                    <input type="checkbox" class="form-check-input" id="oncePerUser<%= index %>" name="oncePerUser" <%= coupon.oncePerUser ? 'checked' : '' %>>
                                    <label for="oncePerUser<%= index %>" class="form-check-label">Once Per User</label>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">Save changes</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Page navigation example">
      <ul class="pagination justify-content-center">
        <% if (prev) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= prev %>" aria-label="Previous">
              <span aria-hidden="true">&laquo;</span>
            </a>
          </li>
        <% } else { %>
          <li class="page-item disabled">
            <span class="page-link" aria-hidden="true">&laquo;</span>
          </li>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
          <li class="page-item <%= i === currentPage ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
          </li>
        <% } %>
        <% if (next) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= next %>" aria-label="Next">
              <span aria-hidden="true">&raquo;</span>
            </a>
          </li>
        <% } else { %>
          <li class="page-item disabled">
            <span class="page-link" aria-hidden="true">&raquo;</span>
          </li>
        <% } %>
      </ul>
    </nav>
  </div>
</div>
<script>
  function confirmUnlistt(itemId) {
    Swal.fire({
      title: "Are you sure?",
      text: "Are you sure you want to proceed?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Confirm",
      cancelButtonText: "Cancel",
      dangerMode: true,
    })
    .then((result) => {
      if (result.isConfirmed) {
        window.location.href = "/admin/coupon/update-status/" + itemId;
      } else {
        console.log("User canceled");
      }
    });
  }

  document.addEventListener('DOMContentLoaded', function () {
  // Function to show error messages
  function showError(input, message) {
    input.classList.add('is-invalid');
    let errorDiv = input.parentNode.querySelector('.error-message');
    if (!errorDiv) {
      errorDiv = document.createElement('div');
      errorDiv.className = 'error-message';
      errorDiv.style.color = 'red';
      errorDiv.style.fontSize = '0.875em';
      errorDiv.style.marginTop = '0.25rem';
      input.parentNode.appendChild(errorDiv);
    }
    errorDiv.textContent = message;
    errorDiv.style.display = 'block';
  }

  // Function to clear error messages
  function clearError(input) {
    input.classList.remove('is-invalid');
    const errorDiv = input.parentNode.querySelector('.error-message');
    if (errorDiv) {
      errorDiv.style.display = 'none';
    }
  }

  // Function to validate individual inputs
  function validateInput(input) {
    const value = input.value.trim();
    if (!value) {
      showError(input, 'This field is required');
      return false;
    }
    clearError(input);
    return true;
  }

  // Function to validate discount amount
  function validateDiscountAmount(discountTypeSelect, discountAmountInput) {
    const discountType = discountTypeSelect.value;
    const discountAmount = parseFloat(discountAmountInput.value);

    if (discountType === 'percentageDiscount') {
      if (isNaN(discountAmount) || discountAmount <= 0 || discountAmount > 99) {
        showError(discountAmountInput, 'Percentage discount must be between 0 and 99');
        return false;
      }
    } else {
      if (isNaN(discountAmount) || discountAmount <= 0) {
        showError(discountAmountInput, 'Discount amount must be greater than 0');
        return false;
      }
    }
    clearError(discountAmountInput);
    return true;
  }

  // Function to validate the edit coupon form
  function validateEditCouponForm(form) {
    let isValid = true;
    const inputs = form.querySelectorAll('input, select');
    const discountTypeSelect = form.querySelector('[name="discountType"]');
    const discountAmountInput = form.querySelector('[name="discountAmount"]');
    const validFromInput = form.querySelector('[name="validFrom"]');
    const validToInput = form.querySelector('[name="validTo"]');
    const codeInput = form.querySelector('[name="code"]');

    inputs.forEach(input => {
      if (!validateInput(input)) {
        isValid = false;
      }
    });

    if (!validateDiscountAmount(discountTypeSelect, discountAmountInput)) {
      isValid = false;
    }

    const validFromDate = new Date(validFromInput.value);
    const validToDate = new Date(validToInput.value);
    const today = new Date();
    today.setHours(0, 0, 0, 0);

    if (validFromDate < today) {
      showError(validFromInput, 'Valid From date cannot be in the past');
      isValid = false;
    }

    if (validToDate < today) {
      showError(validToInput, 'Valid To date cannot be in the past');
      isValid = false;
    }

    if (validFromDate > validToDate) {
      showError(validFromInput, 'Valid From date cannot be after Valid To date');
      showError(validToInput, 'Valid To date cannot be before Valid From date');
      isValid = false;
    }

    if (!codeInput.value.trim()) {
      showError(codeInput, 'Coupon code cannot be blank or contain only spaces');
      isValid = false;
    }

    return isValid;
  }

  // Add validation for edit coupon forms
  const editCouponForms = document.querySelectorAll('[id^="editCouponModal"] form');
  editCouponForms.forEach(form => {
    const inputs = form.querySelectorAll('input, select');
    const discountTypeSelect = form.querySelector('[name="discountType"]');
    const discountAmountInput = form.querySelector('[name="discountAmount"]');

    form.addEventListener('submit', function (e) {
      e.preventDefault();
      if (validateEditCouponForm(form)) {
        form.submit();
      } else {
        alert('Please fix the errors in the form before submitting.');
      }
    });

    inputs.forEach(input => {
      input.addEventListener('input', function () {
        validateInput(input);
        if (input === discountAmountInput || input === discountTypeSelect) {
          validateDiscountAmount(discountTypeSelect, discountAmountInput);
        }
      });

      input.addEventListener('focusout', function () {
        validateInput(input);
        if (input === discountAmountInput || input === discountTypeSelect) {
          validateDiscountAmount(discountTypeSelect, discountAmountInput);
        }
      });
    });

    discountTypeSelect.addEventListener('change', () => validateDiscountAmount(discountTypeSelect, discountAmountInput));
  });
});

</script>

<%- include('../partials/adminFooter') -%>
